#!/bin/bash

# Template for Flask development server script
# Copy this file to run_dev.sh and customize the database settings below
# This script should be run from the 'www' directory.

echo "Starting Flask development server from $(pwd)..."

# Set environment variables for development
export FLASK_APP=app.py
export FLASK_ENV=development # Enables debug mode and development header simulation in app.py

# --- IMPORTANT: Database Connection Details ---
# Replace the values below with your actual development PostgreSQL details.
# The password can be set directly here, even with special characters,
# as app.py will handle URL-encoding it.

export DB_USERNAME="postgres"
export DB_PASSWORD='your_password_here' # Replace with your actual password
export DB_HOST="localhost"
export DB_PORT="5432"
export DB_NAME="radius"

# Examples for different setups:
# Local PostgreSQL:
# export DB_USERNAME="postgres"
# export DB_PASSWORD='mysecretpassword'
# export DB_HOST="127.0.0.1"
# export DB_PORT="5432"
# export DB_NAME="freeradius"

# Docker PostgreSQL:
# export DB_USERNAME="postgres"
# export DB_PASSWORD='dockerpassword'
# export DB_HOST="localhost"
# export DB_PORT="5432"
# export DB_NAME="radius"

# Remote PostgreSQL:
# export DB_USERNAME="myuser"
# export DB_PASSWORD='myremotepassword'
# export DB_HOST="db.example.com"
# export DB_PORT="5432"
# export DB_NAME="production_db"
# --- IMPORTANT ---

# Optional: Set a specific port for Flask to run on (default is 5000 for development in app.py)
# export FLASK_RUN_PORT=5001

# Simulate APP_BUILD_DATE for local development consistency
export APP_BUILD_DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC") # ISO 8601 format UTC

# Optional: Set Flask secret key for development
# export SECRET_KEY="dev_secret_key_change_for_production"

echo "-----------------------------------------------------"
echo "Development Environment Variables:"
echo "  FLASK_APP: $FLASK_APP"
echo "  FLASK_ENV: $FLASK_ENV"
echo "  DB_USERNAME: $DB_USERNAME"
echo "  DB_PASSWORD: [set - not echoed for security]" # Avoid echoing password
echo "  DB_HOST: $DB_HOST"
echo "  DB_PORT: $DB_PORT"
echo "  DB_NAME: $DB_NAME"
if [ -n "$FLASK_RUN_PORT" ]; then
  echo "  FLASK_RUN_PORT: $FLASK_RUN_PORT"
fi
echo "  APP_BUILD_DATE: $APP_BUILD_DATE (simulated for dev)"
echo "-----------------------------------------------------"
echo "Ensure DB_* variables are correctly set for your development PostgreSQL instance."
echo "The database should contain the 'users', 'radusergroup', and 'radcheck' tables."
echo ""

# Check if database connection variables are set
if [ -z "$DB_USERNAME" ] || [ -z "$DB_PASSWORD" ] || [ -z "$DB_HOST" ] || [ -z "$DB_PORT" ] || [ -z "$DB_NAME" ]; then
    echo "⚠️  WARNING: Some database environment variables are not set!"
    echo "   Please check the DB_* variables above."
    echo ""
fi

# Check if we're using the template password
if [ "$DB_PASSWORD" = "your_password_here" ]; then
    echo "⚠️  WARNING: You're using the template password!"
    echo "   Please update DB_PASSWORD with your actual database password."
    echo ""
fi

echo "Starting Flask application..."
echo ""

# Run the Flask development server using the app.run() configured in app.py
python app.py

# Alternative using 'flask run' command (less direct if app.py has custom app.run() settings):
# flask run --host=0.0.0.0 --port=${FLASK_RUN_PORT:-5000} 